[
  {
    "competency": "Writing code",
    "description": "Able to write code to the correct standard",
    "level": "Entry",
    "indicator": "Writes code with testability, readability, edge cases, and errors in mind."
  },
  {
    "competency": "Writing code",
    "description": "Able to write code to the correct standard",
    "level": "Intermediate",
    "indicator": "Consistently writes functions that are easily testable, easily understood by other developers, and accounts for edge cases and errors. Uses docstrings effectively."
  },
  {
    "competency": "Writing code",
    "description": "Able to write code to the correct standard",
    "level": "Advanced",
    "indicator": "Consistently writes production-ready code that is easily testable, easily understood by other developers, and accounts for edge cases and errors. Understands when it is appropriate to leave comments, but biases towards self-documenting code."
  },
  {
    "competency": "Writing code",
    "description": "Able to write code to the correct standard",
    "level": "Expert",
    "indicator": "Consistently writes production-ready code in a variety of programming languages that is easily testable, easily understood by other developers, and accounts for edge cases and errors. Understands when it is appropriate to leave comments, but biases towards self-documenting code."
  },
  {
    "competency": "Testing",
    "description": "Knowledge of how to test code and implement tests",
    "level": "Entry",
    "indicator": "Knows the testing pyramid. Writes unit tests, sometimes with help from more senior engineers."
  },
  {
    "competency": "Testing",
    "description": "Knowledge of how to test code and implement tests",
    "level": "Intermediate",
    "indicator": "Understands the testing pyramid, writes unit tests in accordance with it, as well as higher level tests with help from more senior engineers. Always tests expected edge cases and errors as well as the happy path."
  },
  {
    "competency": "Testing",
    "description": "Knowledge of how to test code and implement tests",
    "level": "Advanced",
    "indicator": "Understands the testing pyramid, and writes unit tests as well as higher level tests in accordance with it. Always writes tests to handle expected edge cases and errors gracefully, as well as happy paths."
  },
  {
    "competency": "Testing",
    "description": "Knowledge of how to test code and implement tests",
    "level": "Expert",
    "indicator": "Understands their team's testing approach, and uses quality metrics to identify gaps. Works with their team to recommend solutions that are in accordance with accepted testing frameworks and the testing pyramid."
  },
  {
    "competency": "Debugging",
    "description": "Able to debug code using a range of tools",
    "level": "Entry",
    "indicator": "Understands the basics of debugging and the tools used for it."
  },
  {
    "competency": "Debugging",
    "description": "Able to debug code using a range of tools",
    "level": "Intermediate",
    "indicator": "Uses a systematic approach to debug issues located within a single service."
  },
  {
    "competency": "Debugging",
    "description": "Able to debug code using a range of tools",
    "level": "Advanced",
    "indicator": "Proficient at using systematic debugging to diagnose all issues located to a single service. Uses systematic debugging to diagnose cross service issues, sometimes with help from more senior engineers."
  },
  {
    "competency": "Debugging",
    "description": "Able to debug code using a range of tools",
    "level": "Expert",
    "indicator": "Proficient at using systematic debugging to diagnose all issues within the scope of their domain."
  },
  {
    "competency": "Understanding Code",
    "description": "The ability to understand code",
    "level": "Entry",
    "indicator": "Is able to gain context within team's domain with help from more senior engineers."
  },
  {
    "competency": "Understanding Code",
    "description": "The ability to understand code",
    "level": "Intermediate",
    "indicator": "Understands a portion of the team's domain, can gain sufficient context to work productively in that portion."
  },
  {
    "competency": "Understanding Code",
    "description": "The ability to understand code",
    "level": "Advanced",
    "indicator": "Understands their team's domain at a high level and can gather sufficient context to work productively within it. Has expertise in a portion of their team's domain."
  },
  {
    "competency": "Understanding Code",
    "description": "The ability to understand code",
    "level": "Expert",
    "indicator": "Has expertise in their team's domain, including the breadth of services, how they interact, and data flows between systems. Understands adjacent domains as they affect their team."
  },
  {
    "competency": "Software Architecture",
    "description": "Structures of software systems",
    "level": "Entry",
    "indicator": "Is aware of overall service architecture. Designs basic functions with an awareness of overall service architecture, avoiding duplication across codebases and interface-breaking changes."
  },
  {
    "competency": "Software Architecture",
    "description": "Structures of software systems",
    "level": "Intermediate",
    "indicator": "Designs functions that are aligned with the overall service architecture."
  },
  {
    "competency": "Software Architecture",
    "description": "Structures of software systems",
    "level": "Advanced",
    "indicator": "Consistently designs code that is aligned with the overall service architecture. Utilizes abstractions and code isolation effectively."
  },
  {
    "competency": "Software Architecture",
    "description": "Structures of software systems",
    "level": "Expert",
    "indicator": "Architects services and systems using well accepted design patterns to allow for iterative, autonomous development and future scaling. Anticipates future use cases and makes design decisions that minimize the cost of future changes. "
  },
  {
    "competency": "Security",
    "description": "The methods used to secure software",
    "level": "Entry",
    "indicator": "Understands the importance of security."
  },
  {
    "competency": "Security",
    "description": "The methods used to secure software",
    "level": "Intermediate",
    "indicator": "Understands the importance of security. Utilizes this knowledge to ask more senior engineers for help on making decisions that may have security implications."
  },
  {
    "competency": "Security",
    "description": "The methods used to secure software",
    "level": "Advanced",
    "indicator": "Approaches all engineering work with a security lens. Actively looks for security vulnerabilities both in the code and when providing peer reviews."
  },
  {
    "competency": "Security",
    "description": "The methods used to secure software",
    "level": "Expert",
    "indicator": "Actively works with the security team, as well as their own team, to refine their team's approach to security based on the organization's security strategy. Fosters a security first mindset within their own team, and leads by example."
  },
  {
    "competency": "Dealing with ambiguity",
    "description": "Being able to deal with ambiguity",
    "level": "Entry",
    "indicator": "Usually handles risk, change, and uncertainty within their personal scope of work effectively. Usually decides and acts responsibly without having the total picture during routine business, and when in high pressure situations."
  },
  {
    "competency": "Dealing with ambiguity",
    "description": "Being able to deal with ambiguity",
    "level": "Intermediate",
    "indicator": "Handles risk, change, and uncertainty within their personal scope of work effectively. Decides and acts responsibly without having the total picture during routine business and when in high pressure situations."
  },
  {
    "competency": "Dealing with ambiguity",
    "description": "Being able to deal with ambiguity",
    "level": "Advanced",
    "indicator": "Effectively handles risk, change, and uncertainty within their team. Decides and acts responsibly in their work with their team without having the total picture during routine business, as well as when in high pressure situations."
  },
  {
    "competency": "Dealing with ambiguity",
    "description": "Being able to deal with ambiguity",
    "level": "Expert",
    "indicator": "Effectively handles risk, change, and uncertainty across several teams. Decides and acts responsibly in their work across teams without having the total picture during routine business, as well as when in high pressure situations."
  },
  {
    "competency": "Delivering Feedback",
    "description": "The ability to deliver concise feedback",
    "level": "Entry",
    "indicator": "Understands how to deliver praise and constructive feedback in a useful manner."
  },
  {
    "competency": "Delivering Feedback",
    "description": "The ability to deliver concise feedback",
    "level": "Intermediate",
    "indicator": "Delivers praise and constructive feedback to their team, teammates, and manager in a useful manner."
  },
  {
    "competency": "Delivering Feedback",
    "description": "The ability to deliver concise feedback",
    "level": "Advanced",
    "indicator": "Delivers praise and constructive feedback to their team, teammates, and manager in a useful manner. Delivers feedback to their team's business stakeholders when opportunities arise."
  },
  {
    "competency": "Delivering Feedback",
    "description": "The ability to deliver concise feedback",
    "level": "Expert",
    "indicator": "Fosters a culture of delivering praise and constructive feedback within their team and team's respective business stakeholders. Actively demonstrates these behaviours."
  },
  {
    "competency": "Effective communication",
    "description": "Being able to communicate effectively",
    "level": "Entry",
    "indicator": "Communicates effectively, clearly, concisely and in an audience-oriented way, in written and verbal form. Actively listens to others and ensures they are understood. Pays attention to nonverbal communication."
  },
  {
    "competency": "Effective communication",
    "description": "Being able to communicate effectively",
    "level": "Intermediate",
    "indicator": "Usually communicates effectively, clearly, concisely and in an audience-oriented way in written and verbal form both technical and non technical subjects, to their teammates. Actively listens to others and ensures they are understood. Pays attention to nonverbal communication."
  },
  {
    "competency": "Effective communication",
    "description": "Being able to communicate effectively",
    "level": "Advanced",
    "indicator": "Communicates effectively, clearly, concisely in written and verbal form both technical and non technical subjects, and in an audience-oriented way. Actively listens to others and ensures they are understood. Pays attention to nonverbal communication."
  },
  {
    "competency": "Effective communication",
    "description": "Being able to communicate effectively",
    "level": "Expert",
    "indicator": "Is able to communicate effectively with a diverse team. Fosters a culture of clear, concise, effective, audience-oriented communication on their team, ensuring teammates actively listen to others and are understood. Actively demonstrates these behaviours. Pays attention to nonverbal communication."
  },
  {
    "competency": "Knowledge Sharing",
    "description": "The ability to share knowledge",
    "level": "Entry",
    "indicator": "Understands their area of work and shares their knowledge frequently with their teammates."
  },
  {
    "competency": "Knowledge Sharing",
    "description": "The ability to share knowledge",
    "level": "Intermediate",
    "indicator": "Understands their work domain, shares their knowledge frequently with their teammates and contributes to their team's documentation. Watches out for opportunities to share knowledge."
  },
  {
    "competency": "Knowledge Sharing",
    "description": "The ability to share knowledge",
    "level": "Advanced",
    "indicator": "Understands their team's domain, shares their knowledge frequently with their teammates and contributes to their team's documentation. Watches out for opportunities to share knowledge and encourages others to do the same."
  },
  {
    "competency": "Knowledge Sharing",
    "description": "The ability to share knowledge",
    "level": "Expert",
    "indicator": "Fosters a culture of documentation and knowledge sharing within their team and with their team's business stakeholders; actively demonstrates these behaviors."
  },
  {
    "competency": "Teamwork",
    "description": "Being able to work as part of a team",
    "level": "Entry",
    "indicator": "Helps their teammates when requested. Gives or shares credit where due."
  },
  {
    "competency": "Teamwork",
    "description": "Being able to work as part of a team",
    "level": "Intermediate",
    "indicator": "When requested, helps their teammates overcome obstacles, resolve blockers, and complete work tasks. Gives or shares credit where due."
  },
  {
    "competency": "Teamwork",
    "description": "Being able to work as part of a team",
    "level": "Advanced",
    "indicator": "Sometimes helps their teammates overcome obstacles, resolve blockers, and complete work tasks. Gives or shares credit where due."
  },
  {
    "competency": "Teamwork",
    "description": "Being able to work as part of a team",
    "level": "Expert",
    "indicator": "Consistently helps their teammates overcome obstacles, resolve blockers, and complete work tasks. Gives or shares credit where due."
  },
  {
    "competency": "Relationship building",
    "description": "Being able to build relationships",
    "level": "Entry",
    "indicator": "Works to build strong relationships with their teammates and manager."
  },
  {
    "competency": "Relationship building",
    "description": "Being able to build relationships",
    "level": "Intermediate",
    "indicator": "Works to build strong relationships with their teammates, manager, and product counterpart."
  },
  {
    "competency": "Relationship building",
    "description": "Being able to build relationships",
    "level": "Advanced",
    "indicator": "Works to build strong relationships with their teammates, manager, as well as their teams' relevant business stakeholders."
  },
  {
    "competency": "Relationship building",
    "description": "Being able to build relationships",
    "level": "Expert",
    "indicator": "Works to build and improve strong relationships with their teammates, manager, their teams' relevant business stakeholders, and senior engineers across the organization. Leverages relationships to better plan for and position their team."
  },
  {
    "competency": "Decision making",
    "description": "Able to make critical decisions",
    "level": "Entry",
    "indicator": "Understands the impact of biases on decision making. Understands accountability."
  },
  {
    "competency": "Decision making",
    "description": "Able to make critical decisions",
    "level": "Intermediate",
    "indicator": "Strives to be objective and reflects on their own biases when making decisions. Holds themselves accountable for decision and outcomes."
  },
  {
    "competency": "Decision making",
    "description": "Able to make critical decisions",
    "level": "Advanced",
    "indicator": "Takes ownership of decisions made in their team by helping their teammates make clear decisions in alignment with organizational goals, backing decisions made, and taking responsibility for their success. Raises awareness for how biases impact decisions and ensures accountability is practiced within their team. Demonstrates these behaviours themselves."
  },
  {
    "competency": "Decision making",
    "description": "Able to make critical decisions",
    "level": "Expert",
    "indicator": "Takes ownership of decisions made across teams by helping them make clear decisions in alignment with organizational goals, backing decisions made, and taking responsibility for their success. Raises awareness for how biases impact decisions and ensures accountability is practiced throughout those teams. Demonstrates these behaviours themselves."
  },
  {
    "competency": "Process thinking",
    "description": "The thinking behind the process",
    "level": "Entry",
    "indicator": "Understands their team's practices and processes."
  },
  {
    "competency": "Process thinking",
    "description": "The thinking behind the process",
    "level": "Intermediate",
    "indicator": "Sometimes thinks about team practices and processes and discusses improvements with team."
  },
  {
    "competency": "Process thinking",
    "description": "The thinking behind the process",
    "level": "Advanced",
    "indicator": "Regularly thinks about team practices and processes and discusses improvements with team."
  },
  {
    "competency": "Process thinking",
    "description": "The thinking behind the process",
    "level": "Expert",
    "indicator": "Thinks about team practices and processes and regularly discusses improvements with their team. Sometimes collaborates with others to improve organizational practices and processes."
  }
 ]